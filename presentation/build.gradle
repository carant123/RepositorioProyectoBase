apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: "kotlin-kapt"

//apply plugin: 'com.google.firebase.firebase-perf'

android {

    def config = rootProject.extensions.getByName("ext")
    def GEO_API_KEY = ''
    compileSdkVersion config["androidCompileSdkVersion"]
    buildToolsVersion config["androidBuildVersion"]
    testBuildType config["testBuildType"]
    defaultConfig {

        applicationId config["androidApplicationId"]
        minSdkVersion config["androidMinSdkVersion"]
        targetSdkVersion config["androidTargetSdkVersion"]
        versionCode config["androidVersionCode"]
        versionName config["androidVersionName"]
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [GEO_API_KEY: GEO_API_KEY]
        buildConfigField 'String', "API_KEY", '"' + GEO_API_KEY + '"'

        testInstrumentationRunner config["testInstrumentationRunner"]

    }


    dexOptions {
        maxProcessCount 8
        javaMaxHeapSize "4g"
        jumboMode true
        preDexLibraries true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude "LICENSE.txt"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/ASL2.0"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkAllWarnings true
        warningsAsErrors false
        noLines true
        showAll true

        disable "TypographyFractions", "TypographyQuotes"
        disable "InvalidPackage"            //Some libraries have issues with this.
        disable "OldTargetApi"
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable "IconDensities"             //For testing purpose. This is safe to remove.
        disable "IconMissingDensityFolder"  //For testing purpose. This is safe to remove.

        lintConfig file("${project.rootDir}/tools/rules-lint.xml")

        xmlOutput file("$project.buildDir/reports/lint-app.xml")
        htmlOutput file("$project.buildDir/reports/lint-app.html")
    }

    // configuracion de keystore env.properties archivo creado

    signingConfigs {
        def env = new Properties()

        if (rootProject.file("env.properties").exists())
            env.load(new FileInputStream(rootProject.file("env.properties")))

        ci {
            storeFile rootProject.file(env["store.file"])
            storePassword env["key.store.password"]
            keyAlias env["key.store.alias"]
            keyPassword env["key.password"]
        }
    }

    // configuracion de ambientes

    buildTypes {
        def date = new Date().format('yyyyMMdd')

        release {
            manifestPlaceholders = [entorno_prefix: "", build_prefix: ""]
            signingConfig signingConfigs.ci
            debuggable false
            shrinkResources false
            minifyEnabled false
            useProguard false

            proguardFiles getDefaultProguardFile("proguard-android.txt")

            buildConfigField 'String', 'URL_TEXT', '""'
        }

        stage {
            debuggable !config["isCiServer"]
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.ci
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (!config["isCiServer"]) {
                applicationIdSuffix ".stage"
                versionNameSuffix "-rc.${date}"
                manifestPlaceholders = [build_prefix: "Stage "]
            } else {
                manifestPlaceholders = [build_prefix: ""]
            }

            buildConfigField 'String', 'URL_TEXT', '""'
        }

        develop {
            debuggable !config["isCiServer"]
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.ci
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (!config["isCiServer"]) {
                testCoverageEnabled true
                applicationIdSuffix '.develop'
                versionNameSuffix "-nb.${date}"
                manifestPlaceholders = [build_prefix: "Develop "]
            } else {
                manifestPlaceholders = [build_prefix: ""]
            }

            buildConfigField 'String', 'URL_TEXT', '""'
        }

        review {
            debuggable true
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.ci
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (!config["isCiServer"]) {
                testCoverageEnabled true
                applicationIdSuffix '.review'
                versionNameSuffix "-nb.${date}"
            }

            manifestPlaceholders = [build_prefix: "Review "]

            buildConfigField 'String', 'URL_TEXT', '""'
        }

    }

    flavorDimensions "perfil"

    // configuracion de perfiles

    productFlavors {
        multiperfil {
            manifestPlaceholders = [app_name: "NombreProyecto1",
                                    appIcon : "@mipmap/ic_launcher"]
            resValue "string", "app_name", "NombreProyecto1"
            buildConfigField "int", "product_type", "2"
            applicationIdSuffix ".p1"

            dimension "perfil"
        }

        lideres {
            manifestPlaceholders = [app_name: "NombreProyecto2",
                                    appIcon : "@mipmap/ic_launcher"]
            resValue "string", "app_name", "NombreProyecto2"
            buildConfigField "int", "product_type", "1"
            applicationIdSuffix ".p2"

            dimension "perfil"
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == "debug")
            setIgnore(true)
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def project = config["appName"]
            def perfil = variant.productFlavors[0].name
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            outputFileName = "${project}-${perfil}-${buildType}-${version}.apk"
        }
    }
    allprojects {
        repositories {
            flatDir {
                dirs 'libs'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':domain')
    implementation project(':data')

    // librerias de support
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:gridlayout-v7:${supportLibVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-v4:${supportLibVersion}"

    // google
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-tagmanager:16.0.7'
    implementation 'com.google.android.gms:play-services-analytics:16.0.7'

    // firebase
//    implementation 'com.google.firebase:firebase-core:16.0.7'
//    implementation 'com.google.firebase:firebase-perf:16.2.4'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"

    // dagger
    implementation 'com.google.dagger:dagger:2.21'
    implementation 'com.google.dagger:dagger-android-support:2.21'
    implementation 'com.android.support:support-v4:28.0.0'
    kapt "com.google.dagger:dagger-android-processor:2.21"
    kapt "com.google.dagger:dagger-compiler:2.21"

    // reactivex
    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // dbFlow
    implementation 'com.github.Raizlabs.DBFlow:dbflow-core:4.1.2'
    implementation 'com.github.Raizlabs.DBFlow:dbflow:4.1.2'
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:4.1.2"

    // views
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.markomilos:paginate:0.5.1'
    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.1.0'
    implementation 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.1.3'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.6.1'
    implementation 'org.apache.commons:commons-text:1.2'
    implementation 'com.mikepenz:fastadapter:3.0.5@aar'
    implementation 'com.mikhaellopez:circularprogressbar:1.1.1'
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar'
    implementation 'com.github.drawers:SpinnerDatePicker:1.0.6'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // development
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.facebook.stetho:stetho:1.5.0'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    // temporal
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // crash
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'cat.ereza:customactivityoncrash:2.2.0'
    implementation 'android.arch.work:work-runtime:1.0.0-rc02'

    // util
    implementation 'io.jsonwebtoken:jjwt:0.9.0'

    // test
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation "org.koin:koin-android:1.0.2"

    testImplementation 'org.koin:koin-test:1.0.2'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "org.robolectric:robolectric:4.2"
    testImplementation "org.robolectric:shadows-multidex:4.2"
}
